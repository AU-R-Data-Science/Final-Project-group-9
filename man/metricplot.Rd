% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/confusion.R
\name{metricplot}
\alias{metricplot}
\title{Confusion Matrix and Metric Plot}
\usage{
metricplot(y_prob, ytest, metric)
}
\arguments{
\item{y_prob}{the predicted y values of the test dataset}

\item{ytest}{the numeric y values of the test dataset}
}
\value{
a plot of the confusion matrix with a range of cutoff values
}
\description{
Confusion Matrix and Metric Plot
}
\examples{
data=read.csv("iris_csv.csv")
data=data[data$class=="Iris-setosa" | data$class=="Iris-virginica",]
data$class=ifelse(data$class=="Iris-setosa",1,0)

n_features=ncol(data)
dt = sort(sample(nrow(data), nrow(data)*.7))
train<-data[dt,]
test<-data[-dt,]
x=as.matrix(train[,1:n_features-1])
y=train[,n_features]
xtest=test[,1:n_features-1]
ytest=test[,n_features]

init=weightInitialization(x,y)
x1 <- cbind(1, x)
predict=optim(par=init, fn = cost.glm, method='CG',
              X=x1)

cost.glm <- function(theta,X) {
 m <- nrow(X)
 g <- sigmoid(X\%*\%theta)
 (1/m)*sum((-y*log(g)) - ((1-y)*log(1-g)))
}


coeff=unlist(predict[1])
names(coeff)=c("intercept",colnames(x))
cost=unlist(predict[2])
w=coeff[2:length(coeff)]
b=coeff[1]

final_train_pred = sigmoid(w\%*\%t(x)+b)
final_test_pred = sigmoid(w\%*\%t(xtest)+b)

metricplot(final_test_pred,ytest,metric="Accuracy")

}
